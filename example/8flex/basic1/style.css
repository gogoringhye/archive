@charset "UTF-8";

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* flex 컨테이너에 display: flex;를 적용하는 것이 시작(flex는 부모에게 줌) */
/* flex-direction(배치 방향 설정, 아이템들이 배치되는 축의 방향을 결정) */
/* 즉, 메인축의 방향을 가로로 할건지 세로로 할건지 정해주는 것 */
.container {
    border: 2px solid #000;
    background-color: green;
    display: flex;

    flex-direction: row;
    /* 기본값, 옆으로 정렬(배치) */
    flex-direction: column;
    /* 세로 배치(수직) */
    flex-direction: row-reverse;
    /* 역순 가로배치 */
    flex-direction: column-reverse;
    /* 역순 세로배치*/

    flex-direction: row;
    /* 똑같은 명령이 있다면 아래쪽에 있는 명령이 위쪽의 명령을 덮어씀 */

    /* 줄넘김 처리 */
    /* 컨테이너가 더 이상 아이템들을 한 줄에 담을 여유 공간이 없을 때
    아이템 줄바꿈을 어떻게 할지 결정하는 속성 */

    flex-wrap: nowrap;
    /* 기본값, 줄바꿈X(넘치면 그냥 삐져 나감)*/
    flex-wrap: wrap;
    /* 줄바꿈O(float이나 inline-block으로 배치한 요소들과 비슷하게 동작), 
    만약 이 값을 주게 되면 넓이 40%로 설정했을 때 막내가 떨어짐
    */

    flex-wrap: wrap-reverse;
    /*줄바꿈O(아이템 역순 배치)  */


}

/* flex-flow(flex-direction과 flex-wrap을 한꺼번에 지정하는 단축 속성) */
/* flex-flow: row wrap; */
/* 아래의 두 줄을 줄여 쓴 것 */
/* flex-direction: row; */
/* flex-wrap: wrap; */



/* 
기본값

block 요소인 item이 flex 되면 자식의 공간만 차지한다. 
넓이 값을 줬을 때 100%가 넘더라도, 또는 부모의 공간보다 넘더라도 아래로 내려가지 않음 
*/

.container .item {
    border: 2px solid #000;
    background-color: yellow;
    width: 40%;
}